AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda tcp latency telemetry collector
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Layers:
      - 'arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension:16'
      - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:xray-python3:1'
    MemorySize: !Ref pFnMemory
    Runtime: python3.9
    Timeout: !Ref pFnTimeout
    Tracing: Active
Parameters:
  pFnMemory:
    Type: Number
  pFnTimeout:
    Type: Number
  pHostname:
    Type: String
  pPort:
    Type: String
  pIterations:
    Type: String
  pTimeout:
    Type: String
Resources:
  # DynamoDB
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: hostname
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: hostname
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
  # Lambda
  FnRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/service-role/'
      Policies:
        - PolicyName: cloudwatch-insights
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: '*'
        - PolicyName: cloudwatch-logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: 'arn:aws:logs:*:*:log-group:*:*'
        - PolicyName: xray
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                  - xray:GetSamplingStatisticSummaries
                Resource: '*'
        - PolicyName: dynamodb
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: !GetAtt Table.Arn
  Fn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../src
      Handler: fn.handler
      Role: !GetAtt FnRole.Arn
      Environment:
        Variables:
          TCP_LATENCY_TABLE: !Ref Table
          TARGET_HOSTNAME: !Ref pHostname
          TARGET_PORT: !Ref pPort
          TARGET_ITERATIONS: !Ref pIterations
          TARGET_TIMEOUT: !Ref pTimeout
  FnLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${Fn}'
      RetentionInDays: 7
  # Schedule
  Scheduler:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(0/1 * * * ? *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt Fn.Arn
          Id: fn_tcp_latency
  FnPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Fn.Arn
      Principal: events.amazonaws.com
      Action: lambda:InvokeFunction
      SourceArn: !GetAtt Scheduler.Arn
Outputs:
  outFn:
    Value: !Ref Fn
  outTable:
    Value: !Ref Table